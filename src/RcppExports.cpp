// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BOOOM_opt
List BOOOM_opt(List Mat, Function func, double desired_min, double s_init, int no_runs, int max_iter, double rho, double phi, double tol_fun, double tol_fun_2, double desired_improv_rate, int improv_rate_period, int total_iter, int print_output);
RcppExport SEXP _BOOOM_BOOOM_opt(SEXP MatSEXP, SEXP funcSEXP, SEXP desired_minSEXP, SEXP s_initSEXP, SEXP no_runsSEXP, SEXP max_iterSEXP, SEXP rhoSEXP, SEXP phiSEXP, SEXP tol_funSEXP, SEXP tol_fun_2SEXP, SEXP desired_improv_rateSEXP, SEXP improv_rate_periodSEXP, SEXP total_iterSEXP, SEXP print_outputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type Mat(MatSEXP);
    Rcpp::traits::input_parameter< Function >::type func(funcSEXP);
    Rcpp::traits::input_parameter< double >::type desired_min(desired_minSEXP);
    Rcpp::traits::input_parameter< double >::type s_init(s_initSEXP);
    Rcpp::traits::input_parameter< int >::type no_runs(no_runsSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type tol_fun(tol_funSEXP);
    Rcpp::traits::input_parameter< double >::type tol_fun_2(tol_fun_2SEXP);
    Rcpp::traits::input_parameter< double >::type desired_improv_rate(desired_improv_rateSEXP);
    Rcpp::traits::input_parameter< int >::type improv_rate_period(improv_rate_periodSEXP);
    Rcpp::traits::input_parameter< int >::type total_iter(total_iterSEXP);
    Rcpp::traits::input_parameter< int >::type print_output(print_outputSEXP);
    rcpp_result_gen = Rcpp::wrap(BOOOM_opt(Mat, func, desired_min, s_init, no_runs, max_iter, rho, phi, tol_fun, tol_fun_2, desired_improv_rate, improv_rate_period, total_iter, print_output));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BOOOM_BOOOM_opt", (DL_FUNC) &_BOOOM_BOOOM_opt, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_BOOOM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
